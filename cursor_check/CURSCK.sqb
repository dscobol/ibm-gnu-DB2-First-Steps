       Identification Division.
       Program-ID. CURSCK.

       Data Division.
       Working-Storage Section.

           copy "sql.cbl".
           copy "sqlca.cbl".

           EXEC SQL BEGIN DECLARE SECTION END-EXEC.
       01 pname             pic x(10).
       77 dept              pic s9(4) comp-5.
       01 userid            pic x(8).
       01 passwd.
         49 passwd-length   pic s9(4) comp-5 value 0.
         49 passwd-name     pic x(18).
           EXEC SQL END DECLARE SECTION END-EXEC.

       77 errloc          pic x(80).

       01  WS-Display-Fields.
           12 WS-Display-Dept         pic ZZZ9.

       Procedure Division.
       Main Section.
           display "Sample COBOL program: CURSOR".

           display "Enter your user id (default none): " 
                with no advancing.
           accept userid.

           if userid = spaces
             EXEC SQL CONNECT TO sample END-EXEC
           else
             display "Enter your password : " with no advancing
             accept passwd-name.

      * Passwords in a CONNECT statement must be entered in a VARCHAR format
      * with the length of the input string.
           inspect passwd-name tallying passwd-length for characters
              before initial " ".

           EXEC SQL CONNECT TO sample USER :userid USING :passwd
              END-EXEC.
           move "CONNECT TO" to errloc.
           call "CHECKERR" using SQLCA errloc.

           EXEC SQL DECLARE c1 CURSOR FOR                               1
                    SELECT name, dept FROM staff
                    WHERE job='Mgr' END-EXEC.

           EXEC SQL OPEN c1 END-EXEC.                                   2
           move "OPEN CURSOR" to errloc.
           call "CHECKERR" using SQLCA errloc.

           perform Fetch-Loop thru End-Fetch-Loop
              until SQLCODE not equal 0.

           EXEC SQL CLOSE c1 END-EXEC.                                  4
           move "CLOSE CURSOR" to errloc.
           call "CHECKERR" using SQLCA errloc.

           EXEC SQL CONNECT RESET END-EXEC.
           move "CONNECT RESET" to errloc.
           call "CHECKERR" using SQLCA errloc.
       End-Main.
           go to End-Prog.

       Fetch-Loop Section.
           EXEC SQL FETCH c1 INTO :PNAME, :DEPT END-EXEC.               3
           if SQLCODE not equal 0
              go to End-Fetch-Loop.

           move dept to WS-Display-Dept.
           display pname, " in Dept. ", WS-Display-Dept,
              " is a Manager".

       End-Fetch-Loop. exit.

       End-Prog.
           goback.
